package br.edu.utfpr.dv.sireata.bo;

public abstract class AbstractClass {

    public void templateMethod() {

    	listarTodos(boolean apenasAtivos);
        listar(String nome, boolean apenasAtivos, boolean apenasExternos);
        salvar(Usuario usuario);
        loginEAluno(String login);
        buscarPorLogin(String login);
        buscarPorId(int id);
        buscarEmail(int id);
        alterarSenha(int idUsuario, String senhaAtual, String novaSenha);
        validarLogin(String login, String senha);
        formatarNome(String nome);
        buscarEmails(int[] ids);
        podeCriarAta(int idUsuario);
        buscarPorId(int id);
        listarPorAta(int idAta);
        validarDados(Pauta pauta);
        salvar(Pauta pauta);
        excluir(Pauta pauta);
        buscarPorId(int id);
        listarTodos(boolean apenasAtivos);
        listarPorDepartamento(int idDepartamento);
        listarPorCampus(int idCampus);
        listarParaCriacaoAta(int idDepartamento, int idUsuario);
        listarParaConsultaAtas(int idDepartamento, int idUsuario);
        listar(int idCampus, int idDepartamento);
        buscarPresidente(int idOrgao);
        buscarSecretario(int idOrgao);
        isMembro(int idOrgao, int idUsuario);
        salvar(Orgao orgao);
        buscarPorId(int id);
        buscarPorOrgao(int idOrgao);
        listarTodos(boolean apenasAtivos);
        listarPorCampus(int idCampus, boolean apenasAtivos);
        listarParaCriacaoAta(int idCampus, int idUsuario);
        listarParaConsultaAtas(int idCampus, int idUsuario);
        salvar(Departamento departamento);
        buscarPorId(int id);
        buscarPorUsuario(int idUsuario, int idPauta);
        listarPorPauta(int idPauta);
        validarDados(Comentario comentario);
        salvar(Comentario comentario);
        buscarPorId(int id);
        buscarPorDepartamento(int idDepartamento);
        listarTodos(boolean apenasAtivos);
        listarParaCriacaoAta(int idUsuario);
        listarParaConsultaAtas(int idUsuario);
        salvar(Campus campus);
        buscarPorId(int id);
        listarPorAta(int idAta); 
        validarDados(AtaParticipante participante);
        salvar(AtaParticipante participante);
        excluir(AtaParticipante participante);
        excluir(int id);
        buscarPorId(int id); 
        buscarPorNumero(int idOrgao, TipoAta tipo, int numero, int ano);
        buscarPorPauta(int idPauta); 
        buscarProximoNumeroAta(int idOrgao, int ano, TipoAta tipo);
        listarPublicadas();
        listarPorOrgao(int idOrgao); 
        listarPorDepartamento(int idDepartamento);
        listarPorCampus(int idCampus);
        listarNaoPublicadas(int idUsuario);
        listarPorOrgao(int idOrgao, int idUsuario);

        listarPorDepartamento(int idDepartamento, int idUsuario);
        listarPorCampus(int idCampus, int idUsuario);
        listar(int idCampus, int idDepartamento, int idOrgao, boolean publicada, int idUsuario);
        salvar(Ata ata);
        temComentarios(Ata ata);
        temComentarios(int idAta);
        isPresidenteOuSecretario(int idUsuario, int idAta);
        isPresidente(int idUsuario, int idAta);
        isPublicada(int idAta);
        liberarComentarios(Ata ata);
        liberarComentarios(int idAta);
        bloquearComentarios(Ata ata);
        bloquearComentarios(int idAta);
        gerarAtaReport(Ata ata) ;
        gerarAtaReport(int idAta) ;
        gerarAta(Ata ata);
        gerarAta(int idAta);
        publicar(Ata ata);
        publicar(int idAta);
        excluir(int idAta, int idUsuario);
        getDataExtenso(Date data);
        buscarPorId(int id);
        listarPorAta(int idAta);
        validarDados(Anexo anexo);
        salvar(Anexo anexo);
        excluir(Anexo anexo);
        excluir(int id);
    
    }


    public abstract  List<Usuario> listarTodos(boolean apenasAtivos);
    public abstract  List<Usuario> listar(String nome, boolean apenasAtivos, boolean apenasExternos);
    public abstract  salvar(Usuario usuario);
    public abstract  boolean loginEAluno(String login);
    public abstract  Usuario buscarPorLogin(String login);
    public abstract  Usuario buscarPorId(int id);
    public abstract  String buscarEmail(int id);
    public abstract Usuario alterarSenha(int idUsuario, String senhaAtual, String novaSenha);
    public abstract Usuario validarLogin(String login, String senha);
    private abstract String formatarNome(String nome);
    public abstract String[] buscarEmails(int[] ids);
    public abstract boolean podeCriarAta(int idUsuario);
    public abstract Pauta buscarPorId(int id);
    public abstract List<Pauta> listarPorAta(int idAta);
    public abstract  void validarDados(Pauta pauta);
    public abstract int salvar(Pauta pauta);
    public abstract void excluir(Pauta pauta);
    public abstract Orgao buscarPorId(int id);
    public abstract List<Orgao> listarTodos(boolean apenasAtivos);
    public abstract List<Orgao> listarPorDepartamento(int idDepartamento);
    public abstract List<Orgao> listarPorCampus(int idCampus);
    public abstract List<Orgao> listarParaCriacaoAta(int idDepartamento, int idUsuario);
    public abstract List<Orgao> listarParaConsultaAtas(int idDepartamento, int idUsuario);
    public abstract List<Orgao> listar(int idCampus, int idDepartamento);
    public abstract Usuario buscarPresidente(int idOrgao);
    public abstract Usuario buscarSecretario(int idOrgao);
    public abstract boolean isMembro(int idOrgao, int idUsuario);
    public abstract int salvar(Orgao orgao);
    public abstract Departamento buscarPorId(int id);
    public abstract Departamento buscarPorOrgao(int idOrgao);
    public abstract List<Departamento> listarTodos(boolean apenasAtivos);
    public abstract List<Departamento> listarPorCampus(int idCampus, boolean apenasAtivos);
    public abstract List<Departamento> listarParaCriacaoAta(int idCampus, int idUsuario);
    public abstract List<Departamento> listarParaConsultaAtas(int idCampus, int idUsuario);
    public abstract int salvar(Departamento departamento);
    public abstract Comentario buscarPorId(int id);
    public abstract Comentario buscarPorUsuario(int idUsuario, int idPauta);
    public abstract List<Comentario> listarPorPauta(int idPauta);
    public abstract void validarDados(Comentario comentario);
    public abstract int salvar(Comentario comentario);
    public abstract Campus buscarPorId(int id);
    public abstract Campus buscarPorDepartamento(int idDepartamento);
    public abstract List<Campus> listarTodos(boolean apenasAtivos);
    public abstract List<Campus> listarParaCriacaoAta(int idUsuario);
    public abstract List<Campus> listarParaConsultaAtas(int idUsuario);
    public abstract int salvar(Campus campus);
    public abstract AtaParticipante buscarPorId(int id); 
    public abstract List<AtaParticipante> listarPorAta(int idAta); 
    public abstract void validarDados(AtaParticipante participante); 
    public abstract int salvar(AtaParticipante participante) ;
    public abstract void excluir(AtaParticipante participante) ;
    public abstract void excluir(int id) ;
    public abstract Ata buscarPorId(int id); 
    public abstract Ata buscarPorNumero(int idOrgao, TipoAta tipo, int numero, int ano); 

    public abstract Ata buscarPorPauta(int idPauta); 
    public abstract int buscarProximoNumeroAta(int idOrgao, int ano, TipoAta tipo);
    public abstract List<Ata> listarPublicadas();
    public abstract List<Ata> listarPorOrgao(int idOrgao); 
    public abstract List<Ata> listarPorDepartamento(int idDepartamento);
    public abstract List<Ata> listarPorCampus(int idCampus) ;
    public abstract List<Ata> listarNaoPublicadas(int idUsuario) ;
    public abstract List<Ata> listarPorOrgao(int idOrgao, int idUsuario) ;
    public abstract List<Ata> listarPorDepartamento(int idDepartamento, int idUsuario);
    public abstract List<Ata> listarPorCampus(int idCampus, int idUsuario) ;
    public abstract List<Ata> listar(int idCampus, int idDepartamento, int idOrgao, boolean publicada, int idUsuario);
    public abstract int salvar(Ata ata);
    public abstract boolean temComentarios(Ata ata);
    public abstract boolean temComentarios(int idAta);
    public abstract boolean isPresidenteOuSecretario(int idUsuario, int idAta);
    public abstract boolean isPresidente(int idUsuario, int idAta);
    public abstract boolean isPublicada(int idAta);
    public abstract void liberarComentarios(Ata ata) ;
    public abstract void liberarComentarios(int idAta);
    public abstract void bloquearComentarios(Ata ata) ;
    public abstract void bloquearComentarios(int idAta) ;
    public abstract AtaReport gerarAtaReport(Ata ata) ;
    public abstract AtaReport gerarAtaReport(int idAta) ;
    public abstract byte[] gerarAta(Ata ata) ;
    public abstract byte[] gerarAta(int idAta) ;
    public abstract void publicar(Ata ata) ;
    public abstract void publicar(int idAta);
    public abstract boolean excluir(int idAta, int idUsuario);
    private abstract String getDataExtenso(Date data);
    public abstract Anexo buscarPorId(int id);
    public abstract List<Anexo> listarPorAta(int idAta);
    public abstract void validarDados(Anexo anexo);
    public abstract int salvar(Anexo anexo);
    public abstract void excluir(Anexo anexo);
    public abstract void excluir(int id);
}
